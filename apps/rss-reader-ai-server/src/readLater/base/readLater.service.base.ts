/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ReadLater as PrismaReadLater } from "@prisma/client";

export class ReadLaterServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ReadLaterCountArgs, "select">
  ): Promise<number> {
    return this.prisma.readLater.count(args);
  }

  async readLaters(
    args: Prisma.ReadLaterFindManyArgs
  ): Promise<PrismaReadLater[]> {
    return this.prisma.readLater.findMany(args);
  }
  async readLater(
    args: Prisma.ReadLaterFindUniqueArgs
  ): Promise<PrismaReadLater | null> {
    return this.prisma.readLater.findUnique(args);
  }
  async createReadLater(
    args: Prisma.ReadLaterCreateArgs
  ): Promise<PrismaReadLater> {
    return this.prisma.readLater.create(args);
  }
  async updateReadLater(
    args: Prisma.ReadLaterUpdateArgs
  ): Promise<PrismaReadLater> {
    return this.prisma.readLater.update(args);
  }
  async deleteReadLater(
    args: Prisma.ReadLaterDeleteArgs
  ): Promise<PrismaReadLater> {
    return this.prisma.readLater.delete(args);
  }
}
